###########################
## DO NOT EDIT THIS FILE ##
###########################

# Magento 2 focused PHP hosts
server {
    listen 80;
    listen 443 ssl http2;
    # Docker DNS reolver is .11, NOT A MISTAKE
    resolver 127.0.0.11 ipv6=off;

    server_name ~^.*\.(loc|local|localhost)$;
    ssl_certificate $SSL_CERT;
    ssl_certificate_key $SSL_KEY;

    error_log /dev/stdout;
    access_log /dev/stdout;

    # Magento Vars
    set $MAGE_MODE developer; # or production or developer

    root /var/www/htdocs/${http_host}${root_subfolder};

    index index.php;
    autoindex off;
    charset off;
    client_max_body_size 20M;

    add_header 'X-Content-Type-Options' 'nosniff';
    add_header 'X-XSS-Protection' '1; mode=block';

    location /setup {
        root /var/www/htdocs/${http_host}/;
        location ~ ^/setup/index.php {
            set $php_host ${PHP_HOSTM2};
#            fastcgi_pass   ${PHP_HOSTM2}:9000;
            fastcgi_pass   unix:/tmp/${php_host}-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        location ~ ^/setup/(?!pub/). {
            deny all;
        }

        location ~ ^/setup/pub/ {
            add_header X-Frame-Options "SAMEORIGIN";
        }
    }

    location /update {
        root /var/www/htdocs/${http_host}/;

        location ~ ^/update/index.php {
            fastcgi_split_path_info ^(/update/index.php)(/.+)$;
            set $php_host ${PHP_HOSTM2};
#            fastcgi_pass   ${PHP_HOSTM2}:9000;
            fastcgi_pass   unix:/tmp/${php_host}-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO        $fastcgi_path_info;
            include        fastcgi_params;
        }

        # deny everything but index.php
        location ~ ^/update/(?!pub/). {
            deny all;
        }

        location ~ ^/update/pub/ {
            add_header X-Frame-Options "SAMEORIGIN";
        }
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location /pub {
        location ~ ^/pub/media/(downloadable|customer|import|theme_customization/.*\.xml) {
            deny all;
        }
        alias /var/www/htdocs/${http_host}/pub;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /static/ {
        if ($MAGE_MODE = "production") {
            expires max;
        }
        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
               rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {
        try_files $uri $uri/ =404;

        location ~ ^/media/theme_customization/.*\.xml {
            deny all;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ =404;
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ =404;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/customer/ {
        deny all;
    }

    location /media/downloadable/ {
        deny all;
    }

    location /media/import/ {
        deny all;
    }

    location ~ cron\.php {
        deny all;
    }

    location ~ (index|url|messages|test|get|static|report|404|503)\.php$ {
        try_files $uri =404;
        set $php_host ${PHP_HOSTM2};
        fastcgi_pass   unix:/tmp/${php_host}-fpm.sock;

        fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param  PHP_VALUE "memory_limit=256M \n max_execution_time=600";
        fastcgi_read_timeout 600s;
        fastcgi_connect_timeout 600s;
        fastcgi_buffers 16 256k;
        fastcgi_buffer_size 256k;

        fastcgi_param  MAGE_MODE $MAGE_MODE;
        fastcgi_param  MAGE_RUN_TYPE store;
        fastcgi_param  MAGE_RUN_CODE $MAGE_RUN_CODE;

        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PHP_VALUE auto_prepend_file=$PHP_PREPENDM2;
        include        fastcgi_params;
    }
}

# Mailhog proxy
server {
    listen 80;
    listen 443 ssl http2;
    server_name  mailhog.loc;

    ssl_certificate $SSL_CERT;
    ssl_certificate_key $SSL_KEY;

    resolver 127.0.0.11 ipv6=off;

    chunked_transfer_encoding on;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host "mailhog.loc";
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;

    location / {
        set $target mailhog:8025;
        proxy_pass http://$target;
    }
}

# VSCode proxy
server {
    listen 80;
    listen 443 ssl http2;
    server_name  vscode.loc;

    ssl_certificate $SSL_CERT;
    ssl_certificate_key $SSL_KEY;

    resolver 127.0.0.11 ipv6=off;

    chunked_transfer_encoding on;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host "vscode.loc";
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;

    location / {
        set $target vscode-server:8443;
        proxy_pass http://$target;
    }
}

# Kibana proxy
server {
    listen 80;
    listen 443 ssl http2;
    server_name  kibana.loc;

    ssl_certificate $SSL_CERT;
    ssl_certificate_key $SSL_KEY;

    resolver 127.0.0.11 ipv6=off;

    chunked_transfer_encoding on;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host "kibana.loc";
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;

    location / {
        set $target kibana:5601;
        proxy_pass http://$target;
    }
}

# Lighthouse proxy
server {
    listen 80;
    listen 443 ssl http2;
    server_name  lighthouse.loc;

    ssl_certificate $SSL_CERT;
    ssl_certificate_key $SSL_KEY;

    resolver 127.0.0.11 ipv6=off;

    chunked_transfer_encoding on;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;

    location / {
        set $target lighthouse-server:9001;
        proxy_pass http://$target;
    }
}

# Dozzle proxy
server {
    listen 80;
    listen 443 ssl http2;
    server_name  dozzle.loc;

    ssl_certificate $SSL_CERT;
    ssl_certificate_key $SSL_KEY;

    resolver 127.0.0.11 ipv6=off;

    chunked_transfer_encoding on;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;

    location / {
        set $target dozzle:8080;
        proxy_pass http://$target;
    }
}
