#!/usr/bin/env bash

###########################################
# IMPORT SHARED CODE.
# YOU SHOULD NOT NEED TO EDIT THIS SECTION.
###########################################
# ALLOW THIS TO RUN FROM ANYWHERE UNDER 'docker-stack'
# IT COULD TECHNICALLY RUN ANYWHERE BUT COULD CAUSE CONFUSION
if [[ "$PWD" != *"docker-stack"* ]]; then
  echo "This script can only run with the docker-stack folder tree."
  exit 1;
fi
SCRIPT_PATH=$( cd "$(dirname "${BASH_SOURCE[0]}")/../" ; pwd -P )
cd "$SCRIPT_PATH"
source ./project/includes/_config.sh                  # Import global variables
source ./project/includes/_functions_shared.sh               # Import the common code used by all of our setup scripts..

# Project Variables
repo_type='github'; # 'github' or 'bitbucket'
cvs_organisation='phpmyadmin'; # the organisation name for Github or Bitbucket
project_name='phpmyadmin'; # Name as used in Github or Bitbucket
cvs_branch="RELEASE_5_2_1";
resources_storage='local'; # Where to access shared resources (see README.md), 'local' or 's3'
php_host='php82'; # 'php56', 'php70', 'php72', 'php73' or 'php74'
required_containers=( "nginx" "${php_host}");
composer_version="2";
vmhost_name='phpmyadmin.local'; # domain name for this project in local vm.

##################################
# INITIALISE THE VARIABLES/SCRIPT
# THIS MUST ALWAYS BE CALLED FIRST
##################################
trap 'status=$?;if [ $status -eq 1 ]; then echo -e "\n\n${YELLOW}IGNORE USAGE FOR THIS SCRIPT. TO START DOCKER_STACK UI RUN:\nbash ${0} docker:start${NC}\n";fi;' EXIT;
internal_setup_init;

##############################
# BESPOKE/OVERLOADED FUNCTIONS
##############################

############################
# CALL THE SHARED FUNCTIONS.
############################
repository_clone;
composer_install;
./bin/docker-exec ${php_host} "cd /var/www/htdocs/${vmhost_name}/pub/ && yarn install --production"
docker:copy ./project/resources/${vmhost_name}/config.inc.php ${php_host}:/var/www/htdocs/${vmhost_name}/pub/
host_entry_display;
